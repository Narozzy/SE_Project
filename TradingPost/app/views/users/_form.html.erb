<style>
  .email-invalid {
    background-color: red;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const email_text = document.getElementById('user_email');
    email_text.parentNode.classList.add('email-invalid');
    email_text.addEventListener('input', function() {
      console.log('in onchange email_text');
      if (email_text.value.includes('.edu')) {
        email_text.parentNode.classList.remove('email-invalid');
      } else {
        email_text.parentNode.classList.add('email-invalid');
      }
    });

    console.dir(email_text);

    // May want to add methods that will automatically have the field which is causing some error to be in focus
    // Can extend this to go in order if there are multiple
  });
</script>

<%= form_with(model: user, local: true) do |form| %>
  <% if user.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(user.errors.count, "error") %> prohibited this user from being saved:</h2>

      <ul>
        <% user.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :first_name %>
    <%= form.text_field :first_name %>
  </div>

  <div class="field">
    <%= form.label :last_name %>
    <%= form.text_field :last_name %>
  </div>

  <div class="field">
    <%= form.label :email %>
    <%= form.text_field :email %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>
